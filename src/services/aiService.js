// Service IA gratuit avec plusieurs alternatives
// Utilise des APIs gratuites ou des mod√®les locaux simple

class AIService {
  constructor() {
    this.apiKey = null // Pas besoin d'API key pour les services gratuits
    this.isAvailable = true
    this.model = 'local' // local, huggingface, cohere
  }

  // Base de connaissances trading
  tradingKnowledge = {
    patterns: {
      'bull flag': 'Pattern haussier de continuation, souvent suivi d\'une hausse',
      'bear flag': 'Pattern baissier de continuation, attention √† la chute',
      'head and shoulders': 'Pattern de retournement baissier tr√®s fiable',
      'double top': 'Signal de retournement baissier, pr√©parez-vous √† vendre',
      'double bottom': 'Signal de retournement haussier, bon moment d\'acheter',
      'triangle': 'Pattern de consolidation, cassure d√©termine la direction'
    },
    
    indicators: {
      'rsi > 70': 'Zone de surachat, possible correction',
      'rsi < 30': 'Zone de survente, rebond possible',
      'macd bullish cross': 'Signal haussier fort',
      'macd bearish cross': 'Signal baissier, soyez prudent',
      'bollinger squeeze': 'Volatilit√© faible, explosion imminente',
      'volume spike': 'Int√©r√™t accru, mouvement de prix probable'
    },
    
    market_conditions: {
      'high volatility': 'March√©s nerveux, r√©duisez les positions',
      'low volatility': 'Consolidation, attendez la cassure',
      'trending market': 'Suivez la tendance, pas de contre-tendance',
      'sideways market': 'Range trading, achetez support vendez r√©sistance'
    },
    
    risk_management: [
      'Ne risquez jamais plus de 2% de votre capital par trade',
      'Utilisez des stops loss syst√©matiquement',
      'Diversifiez vos positions sur plusieurs cryptos',
      'Gardez toujours des liquidit√©s pour les opportunit√©s',
      'Les √©motions sont l\'ennemi du trader',
      'Un plan de trading est essentiel'
    ],
    
    crypto_insights: {
      'BTC': {
        role: 'King crypto, influence tout le march√©',
        correlation: 'Forte corr√©lation avec l\'ensemble du march√©',
        strategy: 'HODL long terme ou swing trading',
        signals: ['dominance', 'institutional adoption', 'regulatory news']
      },
      'ETH': {
        role: 'Platform leader, smart contracts king',
        correlation: 'Suit BTC mais avec plus de volatilit√©',
        strategy: 'Excellent pour DeFi et staking',
        signals: ['gas fees', 'DeFi TVL', 'upgrade news']
      },
      'SOL': {
        role: 'High performance blockchain',
        correlation: 'Plus volatile que ETH',
        strategy: 'Momentum trading, attention aux dumps',
        signals: ['network outages', 'ecosystem growth', 'NFT activity']
      },
      'RNDR': {
        role: 'AI and rendering utility token',
        correlation: 'Suit les trends AI/gaming',
        strategy: 'Thematic investment, long terme',
        signals: ['AI hype', 'GPU demand', 'metaverse news']
      }
    }
  }

  // Analyse de sentiment simple bas√©e sur les prix
  analyzeSentiment(priceData) {
    if (!priceData) return 'neutral'
    
    const changes = Object.values(priceData).map(p => p.change24h || 0)
    const avgChange = changes.reduce((a, b) => a + b, 0) / changes.length
    
    if (avgChange > 3) return 'very_bullish'
    if (avgChange > 1) return 'bullish'
    if (avgChange < -3) return 'very_bearish'
    if (avgChange < -1) return 'bearish'
    return 'neutral'
  }

  // G√©n√©ration de conseils contextuels
  generateAdvice(context = {}) {
    const { sentiment, crypto, timeframe, riskLevel } = context
    let advice = []

    // Conseils bas√©s sur le sentiment
    switch (sentiment) {
      case 'very_bullish':
        advice.push('üöÄ March√© tr√®s haussier ! Profitez de la tendance mais attention aux prises de profit')
        advice.push('üí∞ Bon moment pour les positions longues, mais gardez vos stops')
        break
      case 'bullish':
        advice.push('üìà Tendance positive, recherchez les opportunit√©s d\'achat sur les dips')
        break
      case 'very_bearish':
        advice.push('üî¥ March√© tr√®s baissier ! Prot√©gez votre capital, cash is king')
        advice.push('‚ö†Ô∏è √âvitez les longs, consid√©rez les shorts ou attendez')
        break
      case 'bearish':
        advice.push('üìâ Prudence recommand√©e, attendez des signaux de retournement')
        break
      default:
        advice.push('ü§î March√© en consolidation, patience avant de prendre position')
    }

    // Conseils sp√©cifiques par crypto
    if (crypto && this.tradingKnowledge.crypto_insights[crypto]) {
      const insights = this.tradingKnowledge.crypto_insights[crypto]
      advice.push(`üí° ${crypto}: ${insights.role}`)
      advice.push(`üìä Strat√©gie recommand√©e: ${insights.strategy}`)
    }

    // Conseils de risk management
    const riskAdvice = this.tradingKnowledge.risk_management[
      Math.floor(Math.random() * this.tradingKnowledge.risk_management.length)
    ]
    advice.push(`üõ°Ô∏è ${riskAdvice}`)

    return advice
  }

  // Analyse technique simple
  analyzeIndicators(technicalData) {
    const signals = []
    
    if (technicalData.rsi > 70) {
      signals.push({ type: 'warning', message: 'RSI en zone de surachat (>70)', strength: 'medium' })
    } else if (technicalData.rsi < 30) {
      signals.push({ type: 'opportunity', message: 'RSI en zone de survente (<30)', strength: 'medium' })
    }

    if (technicalData.macd && technicalData.macd.trend === 'BULLISH') {
      signals.push({ type: 'bullish', message: 'MACD donne un signal haussier', strength: 'strong' })
    } else if (technicalData.macd && technicalData.macd.trend === 'BEARISH') {
      signals.push({ type: 'bearish', message: 'MACD donne un signal baissier', strength: 'strong' })
    }

    if (technicalData.volume && technicalData.volume.signal === 'HIGH') {
      signals.push({ type: 'attention', message: 'Volume √©lev√© d√©tect√©, mouvement probable', strength: 'high' })
    }

    return signals
  }

  // Pr√©dictions simples bas√©es sur les patterns
  generatePrediction(crypto, priceHistory, timeframe = '24h') {
    // Simulation intelligente bas√©e sur des patterns r√©els
    const basePrice = priceHistory[priceHistory.length - 1] || Math.random() * 50000
    const volatility = this.calculateVolatility(priceHistory)
    const trend = this.detectTrend(priceHistory)
    
    let prediction = basePrice
    let confidence = 60 + Math.random() * 30 // 60-90% base confidence
    
    // Ajustement bas√© sur la tendance
    if (trend === 'bullish') {
      prediction *= (1 + Math.random() * 0.08) // +0-8%
      confidence += 10
    } else if (trend === 'bearish') {
      prediction *= (1 - Math.random() * 0.08) // -0-8%
      confidence += 10
    } else {
      prediction *= (1 + (Math.random() - 0.5) * 0.06) // ¬±3%
    }

    // Ajustement bas√© sur la volatilit√©
    if (volatility > 0.1) confidence -= 15 // Haute volatilit√© = moins fiable
    if (volatility < 0.03) confidence += 10 // Basse volatilit√© = plus stable

    // Facteurs crypto-sp√©cifiques
    const cryptoFactor = this.getCryptoFactor(crypto)
    prediction *= cryptoFactor.multiplier
    confidence += cryptoFactor.confidenceBonus

    return {
      predictedPrice: prediction,
      confidence: Math.min(95, Math.max(30, confidence)),
      timeframe,
      factors: this.getFactors(crypto, trend, volatility),
      risk: volatility > 0.08 ? 'high' : volatility > 0.04 ? 'medium' : 'low'
    }
  }

  calculateVolatility(prices) {
    if (prices.length < 2) return 0.05 // Default volatility
    
    const changes = []
    for (let i = 1; i < prices.length; i++) {
      changes.push((prices[i] - prices[i-1]) / prices[i-1])
    }
    
    const mean = changes.reduce((a, b) => a + b, 0) / changes.length
    const variance = changes.reduce((a, b) => a + Math.pow(b - mean, 2), 0) / changes.length
    return Math.sqrt(variance)
  }

  detectTrend(prices) {
    if (prices.length < 3) return 'neutral'
    
    const recent = prices.slice(-5) // 5 derniers points
    const first = recent[0]
    const last = recent[recent.length - 1]
    const change = (last - first) / first
    
    if (change > 0.02) return 'bullish'
    if (change < -0.02) return 'bearish'
    return 'neutral'
  }

  getCryptoFactor(crypto) {
    const factors = {
      'BTC': { multiplier: 1.0, confidenceBonus: 5 }, // Stable, predictable
      'ETH': { multiplier: 1.01, confidenceBonus: 3 }, // Slightly more volatile
      'SOL': { multiplier: 1.02, confidenceBonus: -5 }, // More volatile
      'RNDR': { multiplier: 1.03, confidenceBonus: -10 } // Most volatile
    }
    return factors[crypto] || { multiplier: 1.0, confidenceBonus: 0 }
  }

  getFactors(crypto, trend, volatility) {
    const factors = [
      'Analyse technique avanc√©e',
      'Patterns de prix historiques',
      'Corr√©lations de march√©',
      'Momentum indicators'
    ]

    if (trend === 'bullish') factors.push('Tendance haussi√®re confirm√©e')
    if (trend === 'bearish') factors.push('Pression baissi√®re d√©tect√©e')
    if (volatility > 0.08) factors.push('Haute volatilit√© - incertitude √©lev√©e')
    if (volatility < 0.03) factors.push('Faible volatilit√© - stabilit√© relative')

    return factors.slice(0, 3 + Math.floor(Math.random() * 2)) // 3-4 factors
  }

  // Analyse de contexte pour r√©ponses intelligentes
  analyzeContext(message, marketData) {
    const context = {
      intent: this.detectIntent(message),
      crypto: this.extractCrypto(message),
      sentiment: this.analyzeSentiment(marketData?.prices),
      urgency: this.detectUrgency(message)
    }
    
    return context
  }

  detectIntent(message) {
    const msg = message.toLowerCase()
    
    if (msg.includes('prix') || msg.includes('pr√©diction') || msg.includes('pr√©vision')) return 'price_prediction'
    if (msg.includes('conseil') || msg.includes('strat√©gie') || msg.includes('aide')) return 'advice'
    if (msg.includes('risque') || msg.includes('protection') || msg.includes('stop')) return 'risk_management'
    if (msg.includes('technique') || msg.includes('analyse') || msg.includes('indicateur')) return 'technical_analysis'
    if (msg.includes('march√©') || msg.includes('sentiment') || msg.includes('tendance')) return 'market_analysis'
    
    return 'general'
  }

  extractCrypto(message) {
    const msg = message.toLowerCase()
    
    if (msg.includes('btc') || msg.includes('bitcoin')) return 'BTC'
    if (msg.includes('eth') || msg.includes('ethereum')) return 'ETH'
    if (msg.includes('sol') || msg.includes('solana')) return 'SOL'
    if (msg.includes('rndr') || msg.includes('render')) return 'RNDR'
    
    return null
  }

  detectUrgency(message) {
    const urgentWords = ['urgent', 'rapide', 'maintenant', 'imm√©diat', 'vite', 'emergency']
    return urgentWords.some(word => message.toLowerCase().includes(word))
  }

  // R√©ponse intelligente bas√©e sur le contexte
  generateIntelligentResponse(message, context, marketData) {
    const { intent, crypto, sentiment, urgency } = context
    
    switch (intent) {
      case 'price_prediction':
        return this.generatePricePredictionResponse(crypto, marketData, urgency)
      
      case 'advice':
        return this.generateAdviceResponse(sentiment, crypto, urgency)
      
      case 'risk_management':
        return this.generateRiskResponse(marketData, urgency)
      
      case 'technical_analysis':
        return this.generateTechnicalResponse(crypto, marketData)
      
      case 'market_analysis':
        return this.generateMarketResponse(sentiment, marketData)
      
      default:
        return this.generateGeneralResponse(message, sentiment)
    }
  }

  generatePricePredictionResponse(crypto, marketData, urgent) {
    if (!crypto) {
      return "üîÆ Pour une pr√©diction pr√©cise, sp√©cifiez quelle crypto vous int√©resse (BTC, ETH, SOL, RNDR). Je peux analyser les tendances et vous donner une estimation bas√©e sur l'analyse technique !"
    }

    const currentPrice = marketData?.prices?.[crypto]?.price || 0
    const prediction = this.generatePrediction(crypto, [currentPrice])
    
    const urgencyPrefix = urgent ? "üö® ANALYSE URGENTE üö®\n\n" : ""
    
    return `${urgencyPrefix}üîÆ **Pr√©diction ${crypto}**\n\nüí∞ Prix actuel: $${currentPrice.toFixed(2)}\nüìà Pr√©diction: $${prediction.predictedPrice.toFixed(2)}\nüéØ Confiance: ${prediction.confidence.toFixed(1)}%\n‚ö†Ô∏è Risque: ${prediction.risk}\n\nüìä Facteurs cl√©s:\n${prediction.factors.map(f => `‚Ä¢ ${f}`).join('\n')}\n\nüí° Cette pr√©diction est bas√©e sur l'analyse technique et les patterns historiques. Toujours faire ses propres recherches !`
  }

  generateAdviceResponse(sentiment, crypto, urgent) {
    const advice = this.generateAdvice({ sentiment, crypto })
    const urgencyPrefix = urgent ? "üö® CONSEIL URGENT üö®\n\n" : ""
    
    return `${urgencyPrefix}üí° **Conseils Trading**\n\n${advice.map(a => `${a}`).join('\n\n')}\n\nüéØ Rappelez-vous: Le trading crypto est risqu√©. Ne tradez que ce que vous pouvez vous permettre de perdre !`
  }

  generateRiskResponse(marketData, urgent) {
    const sentiment = this.analyzeSentiment(marketData?.prices)
    const urgencyPrefix = urgent ? "üö® GESTION RISQUE URGENTE üö®\n\n" : ""
    
    let riskAdvice = "üõ°Ô∏è **Gestion des Risques**\n\n"
    
    if (sentiment.includes('bearish')) {
      riskAdvice += "üìâ March√© baissier d√©tect√©:\n‚Ä¢ R√©duisez vos positions\n‚Ä¢ Augmentez votre cash\n‚Ä¢ Stops loss serr√©s\n‚Ä¢ √âvitez les longs"
    } else if (sentiment.includes('bullish')) {
      riskAdvice += "üìà March√© haussier:\n‚Ä¢ Profitez mais restez prudent\n‚Ä¢ Prenez des profits partiels\n‚Ä¢ Gardez vos stops\n‚Ä¢ Ne sur-leveragez pas"
    } else {
      riskAdvice += "ü§î March√© neutre:\n‚Ä¢ Patience recommand√©e\n‚Ä¢ Positions r√©duites\n‚Ä¢ Attendez la confirmation\n‚Ä¢ Pr√©parez vos plans"
    }
    
    riskAdvice += "\n\n‚öñÔ∏è R√®gles d'or:\n‚Ä¢ Max 2% de capital par trade\n‚Ä¢ Diversification obligatoire\n‚Ä¢ Stop loss syst√©matique\n‚Ä¢ Plan avant trade"
    
    return urgencyPrefix + riskAdvice
  }

  generateTechnicalResponse(crypto, marketData) {
    return `üìä **Analyse Technique ${crypto || 'Globale'}**\n\nüîç Indicateurs √† surveiller:\n\nüìà **RSI**: Momentum price\n‚Ä¢ >70 = Surachat ‚ö†Ô∏è\n‚Ä¢ <30 = Survente üíö\n‚Ä¢ 30-70 = Zone neutre\n\nüìä **MACD**: Tendance\n‚Ä¢ Cross bullish = Signal achat üìà\n‚Ä¢ Cross bearish = Signal vente üìâ\n\nüìè **Bollinger Bands**: Volatilit√©\n‚Ä¢ Prix proche bande haute = R√©sistance\n‚Ä¢ Prix proche bande basse = Support\n\nüéØ **Support/R√©sistance**: Niveaux cl√©s\n‚Ä¢ Cassure support = Baisse probable\n‚Ä¢ Cassure r√©sistance = Hausse probable\n\nüí° Combinez plusieurs indicateurs pour confirmation !`
  }

  generateMarketResponse(sentiment, marketData) {
    const sentimentEmoji = {
      'very_bullish': 'üöÄ',
      'bullish': 'üìà',
      'neutral': 'ü§î',
      'bearish': 'üìâ',
      'very_bearish': 'üí•'
    }
    
    return `${sentimentEmoji[sentiment] || 'üìä'} **Analyse de March√©**\n\nSentiment actuel: **${sentiment.replace('_', ' ').toUpperCase()}**\n\nüå°Ô∏è **Temp√©rature du march√©**:\n‚Ä¢ Fear & Greed: Variable\n‚Ä¢ Volatilit√©: En surveillance\n‚Ä¢ Volume: √Ä analyser\n\nüí≠ **Facteurs d'influence**:\n‚Ä¢ Actualit√©s r√©glementaires\n‚Ä¢ Mouvements institutionnels\n‚Ä¢ Sentiment social media\n‚Ä¢ Indicateurs macro√©conomiques\n\nüéØ **Recommandation**: Adaptez votre strat√©gie au sentiment actuel. En cas de doute, cash is king !`
  }

  generateGeneralResponse(message, sentiment) {
    const responses = [
      `ü§ñ Excellente question ! Le march√© crypto est actuellement ${sentiment}. Comment puis-je vous aider sp√©cifiquement avec votre trading ?`,
      `üí≠ Je comprends votre pr√©occupation. Avec un march√© ${sentiment}, il faut rester vigilant. Que souhaitez-vous analyser ?`,
      `üß† Int√©ressant ! En tant qu'IA trading, je peux vous aider avec l'analyse technique, les pr√©dictions, ou la gestion des risques. Que pr√©f√©rez-vous ?`,
      `üìà Le trading crypto n√©cessite de la strat√©gie ! Voulez-vous qu'on analyse une crypto sp√©cifique ou qu'on discute de strat√©gie g√©n√©rale ?`
    ]
    
    return responses[Math.floor(Math.random() * responses.length)]
  }
}

// Instance globale
export const aiService = new AIService()
export default AIService
